```plantuml
@startuml Diagrama de Entidades - BetAware API

!theme aws-orange
skinparam backgroundColor #F8F9FA
skinparam class {
    BackgroundColor #FFFFFF
    BorderColor #2C3E50
    ArrowColor #3498DB
    FontSize 12
    HeaderFontSize 14
    HeaderFontColor #FFFFFF
    HeaderBackgroundColor #2C3E50
}

package "Entidades Principais" #E8F4FD {
    class Usuario {
        ==== Identificação ====
        - id: Long <<PK>>
        - username: String <<unique>>
        - email: String <<unique>>
        - cpf: String <<unique>>
        
        ==== Dados Pessoais ====
        - nome: String
        - cep: String
        - endereco: String
        
        ==== Segurança ====
        - senha: String <<encrypted>>
        - perfil: Perfil
        
        ==== Métodos Spring Security ====
        + getAuthorities(): Collection<GrantedAuthority>
        + getPassword(): String
        + isAccountNonExpired(): boolean
        + isAccountNonLocked(): boolean
        + isCredentialsNonExpired(): boolean
        + isEnabled(): boolean
    }

    class Aposta {
        ==== Identificação ====
        - id: Long <<PK>>
        
        ==== Dados da Aposta ====
        - categoria: String
        - jogo: String
        - valor: Double
        - data: LocalDateTime
        - resultado: ResultadoAposta
        
        ==== Relacionamentos ====
        - usuario_id: Long <<FK>>
        - usuario: Usuario
    }
}

package "Enumerações" #FFF2CC {
    enum Perfil {
        ADMIN
        USER
        --
        Controla níveis de acesso
        na aplicação
    }

    enum ResultadoAposta {
        GANHOU
        PERDEU
        CANCELADA
        PENDENTE
        --
        Estado atual da aposta
    }
}

package "Constraints e Validações" #E1F5FE {
    note top of Usuario : @Entity\n@Table(name = "usuario")\n@NotBlank, @Email, @Pattern\nImplements UserDetails
    note top of Aposta : @Entity\n@Table(name = "apostas")\n@NotNull, @Positive\n@ManyToOne com Usuario
    note right of Perfil : @Enumerated(EnumType.STRING)
    note right of ResultadoAposta : @Enumerated(EnumType.STRING)
}

' Relacionamentos
Usuario ||--o{ Aposta : "1 usuário pode ter N apostas"
Usuario }o--|| Perfil : "possui um perfil"
Aposta }o--|| ResultadoAposta : "possui um resultado"

' Notas explicativas
note bottom of Usuario
    **Implementa UserDetails do Spring Security**
    - Permite autenticação e autorização
    - Senhas criptografadas com BCrypt
    - Validações com Bean Validation
end note

note bottom of Aposta
    **Representa uma aposta simulada**
    - Vinculada sempre a um usuário
    - Valores positivos obrigatórios
    - Data de criação obrigatória
end note

@enduml
```
